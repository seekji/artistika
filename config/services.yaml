# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'ru'

imports:
  - { resource: admin/content.yaml }
  - { resource: admin/handbooks.yaml }

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\DataFixtures\ORM\LoadContextDataFixture:
        tags: [doctrine.fixture.orm]

    App\DataFixtures\ORM\LoadAdminDataFixture:
        tags: [doctrine.fixture.orm]

    App\DataFixtures\ORM\LoadCityDataFixture:
        tags: [doctrine.fixture.orm]

    App\DataFixtures\ORM\LoadTagDataFixture:
        tags: [doctrine.fixture.orm]

    App\DataFixtures\ORM\LoadHallDataFixture:
      tags: [doctrine.fixture.orm]

    App\DataFixtures\ORM\LoadEventDataFixture:
      tags: [doctrine.fixture.orm]

    App\DataFixtures\ORM\LoadMenuDataFixture:
      tags: [doctrine.fixture.orm]

    App\DataFixtures\ORM\LoadNewsDataFixture:
      tags: [doctrine.fixture.orm]

    App\DataFixtures\ORM\LoadEventSliderDataFixture:
      tags: [doctrine.fixture.orm]

    twig.extension.intl:
      class: Twig_Extensions_Extension_Intl
      tags:
        - { name: twig.extension }

    app.service.location_service:
        class: App\Service\LocationService
        arguments:
            - '@request_stack'
            - '@geoip.provider.maxmind'
            - '@doctrine.orm.entity_manager'

    App\EventListener\AdminMenuListener:
      tags:
        - { name: kernel.event_listener, event: sonata.admin.event.configure.menu.sidebar, method: addMenuItems }

    App\EventListener\UniqueSlugListener:
      tags:
        - { name: doctrine.event_listener, event: prePersist, connection: default }

    App\Service\SettingsService:
      arguments:
        - '%kernel.root_dir%'

    app.serialization.event_handler:
      class: App\Serializer\EventHandler
      tags:
        - { name: jms_serializer.handler, type: App\Entity\Event, direction: serialization, format: json, method: serializeEvent }
      arguments: [ "@sonata.media.provider.image", "@sonata.media.provider.file", "@router.default" ]

    App\Log\FeedbackLogger:
      arguments: ['@monolog.logger.feedback']
      public: true

#    App\EventListener\RequestListener:
#        tags:
#            - { name: kernel.event_listener, event: kernel.request }